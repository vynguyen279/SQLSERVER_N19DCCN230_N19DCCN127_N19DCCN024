/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.hotelmanagement;

import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author VyNguyen
 */
public class Role extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Role() {
        initComponents();
        LoadServerRole();
        block(false);
    }
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        Role = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        LogoutBtn = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtRole = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnLuu = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        RoleTable = new javax.swing.JTable();
        cbTable = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        gAlter = new javax.swing.JCheckBox();
        owner = new javax.swing.JCheckBox();
        gDelete = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        rUpdate = new javax.swing.JCheckBox();
        rDelete = new javax.swing.JCheckBox();
        rInsert = new javax.swing.JCheckBox();
        rAlter = new javax.swing.JCheckBox();
        btnXoa1 = new javax.swing.JButton();
        gInsert1 = new javax.swing.JCheckBox();
        gUpdate1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 200));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Login");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        Role.setBackground(new java.awt.Color(0, 0, 0));
        Role.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        Role.setForeground(new java.awt.Color(255, 255, 255));
        Role.setText("Role");
        Role.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RoleMouseClicked(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Backup");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        LogoutBtn.setBackground(new java.awt.Color(0, 0, 0));
        LogoutBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        LogoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        LogoutBtn.setText("Log Out");
        LogoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Role, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(LogoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(Role)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LogoutBtn)
                .addGap(23, 23, 23))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1018, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Role Management");

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 102));
        jLabel4.setText("Role name");

        txtRole.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRoleFocusGained(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 153, 102));
        jLabel12.setText("Table");

        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        RoleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        RoleTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RoleTableFocusLost(evt);
            }
        });
        RoleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RoleTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(RoleTable);

        cbTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BO_PHAN", "CT_DV", "CT_KHACH_O", "CT_KM", "CT_PD", "CT_PHU_THU", "CT_PT", "CT_TN", "DICH_VU", "DOI_PHONG", "GIA_DV", "GIA_HP", "HANG_PHONG", "HOA_DON", "KHACH_HANG", "KHUYEN_MAI", "KIEU_PHONG", "LOAI_PHONG", "NHAN_VIEN", "NQL", "PHIEU_DAT", "PHIEU_THUE", "PHONG", "PHU_THU", "TAI_KHOAN", "TIEN_NGHI", "TRANG_THAI" }));

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 153, 102));
        jLabel13.setText("Grant");

        gAlter.setText("Alter");

        owner.setText("db_owner");

        gDelete.setText("Delete");

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 153, 102));
        jLabel14.setText("Revoke");

        rUpdate.setText("Update");

        rDelete.setText("Delete");

        rInsert.setText("Insert");

        rAlter.setText("Alter");

        btnXoa1.setText("Xóa");
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        gInsert1.setText("Insert");

        gUpdate1.setText("Update");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(349, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1)
                        .addGap(426, 426, 426))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rAlter)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rDelete))
                            .addComponent(rInsert)
                            .addComponent(jLabel12)
                            .addComponent(cbTable, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(gAlter)
                                .addGap(8, 8, 8)
                                .addComponent(gUpdate1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gDelete))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(gInsert1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(owner)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))))
            .addGroup(layout.createSequentialGroup()
                .addGap(402, 402, 402)
                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel4)
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThem)
                            .addComponent(btnXoa1))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gAlter)
                            .addComponent(gDelete)
                            .addComponent(gUpdate1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gInsert1)
                            .addComponent(owner))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rAlter)
                            .addComponent(rUpdate)
                            .addComponent(rDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rInsert))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        new LoginManagement().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel6MouseClicked

    private void RoleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RoleMouseClicked
        // TODO add your handling code here:
        new Role().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_RoleMouseClicked

    private void LogoutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutBtnMouseClicked
        // TODO add your handling code here:
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutBtnMouseClicked

    private void block(boolean b){
         cbTable.setEnabled(b);
         gAlter.setEnabled(b);
         gDelete.setEnabled(b);
         gUpdate1.setEnabled(b);
         gInsert1.setEnabled(b);
         owner.setEnabled(b);
         rAlter.setEnabled(b);
         rDelete.setEnabled(b);
         rInsert.setEnabled(b);
         rUpdate.setEnabled(b);
         btnLuu.setEnabled(b);
    }
    
    private void DeleteRole(String role) {
        try {
            Connection ketnoi = SQLConnection.getConnection();
            Statement stmt = ketnoi.createStatement();
            String sql = "DROP  ROLE  "+ role; 
            stmt.executeUpdate(sql);
        } catch (SQLException ex) {
            Logger.getLogger(Role.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void DeleteSelectedRole() {
        Connection ketnoi = SQLConnection.getConnection();
        int row = RoleTable.getSelectedRow();
        String value = RoleTable.getModel().getValueAt(row, 0).toString();
        String sql = "DROP ROLE  "+ value; 
        try {
            Statement stmt = ketnoi.createStatement();
            stmt.executeUpdate(sql);
        } catch (SQLException ex) {
            Logger.getLogger(Role.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
     private int isExist(String role) {
        Connection ketnoi = SQLConnection.getConnection();
        int tonTai = 0;
        String sql = "Select name\n" +
                                 "From sys.database_principals \n" +
                                 "Where name = '" +role+"'";
        try {
            PreparedStatement ps = ketnoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                tonTai = 1;
            }
            rs.close();
            ps.close();
            ketnoi.close();
        } catch (Exception e) {
            Logger.getLogger(Role.class.getName()).log(Level.SEVERE, null, e);
        }
        return tonTai;
    }
    
        private void LoadServerRole() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) RoleTable.getModel();
            dtm.setNumRows(0);
            Connection ketnoi = SQLConnection.getConnection();
            String sql = "Select name\n" +
                                 "From sys.database_principals \n" +
                                 "Where type = 'R' and principal_id between 1 and 16383";
            PreparedStatement ps = ketnoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector vt = new Vector();
                vt.add(rs.getString("name"));
                dtm.addRow(vt);
            }
            RoleTable.setModel(dtm);
            rs.close();
            ps.close();
            ketnoi.close();
        } catch (SQLException ex) {
            Logger.getLogger(Role.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
 
    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        String role = txtRole.getText().trim();
        String table = cbTable.getSelectedItem().toString();
         Connection kn = SQLConnection.getConnection();
        try {
            if(gAlter.isSelected())
            {
                 Statement st = kn.createStatement();
                 String s = "USE QLKS GRANT ALTER ON  "+ table +" TO "+role; 
                 st.executeUpdate(s);
            }
             if(owner.isSelected())
            {
                 Statement st = kn.createStatement();
                 String s = "ALTER ROLE db_owner ADD MEMBER "+role; 
                 st.executeUpdate(s);
            }
            if(gDelete.isSelected())
            {
                 Statement st = kn.createStatement();
                 String s = "USE QLKS GRANT DELETE ON  "+ table +" TO "+role; 
                 st.executeUpdate(s);
            }
            if(gInsert1.isSelected())
            {
                 Statement st = kn.createStatement();
                 String s = "USE QLKS GRANT INSERT ON  "+ table +" TO "+role; 
                 st.executeUpdate(s);
            }
            if(owner.isSelected())
            {
                 Statement st = kn.createStatement();
                 String s = "USE QLKS GRANT UPDATE ON  "+ table +" TO "+role; 
                 st.executeUpdate(s);
            }
            if(rAlter.isSelected())
            {
                 Statement st = kn.createStatement();
                 String s = "USE QLKS REVOKE ALTER ON  "+ table +" TO "+role; 
                 st.executeUpdate(s);
            }
            if(rDelete.isSelected())
            {
                 Statement st = kn.createStatement();
                 String s = "USE QLKS REVOKE DELETE ON  "+ table +" TO "+role; 
                 st.executeUpdate(s);
            }
            if(rInsert.isSelected())
            {
                 Statement st = kn.createStatement();
                 String s = "USE QLKS REVOKE INSERT ON  "+ table +" TO "+role; 
                 st.executeUpdate(s);
            }
            if(rUpdate.isSelected())
            {
                 Statement st = kn.createStatement();
                 String s = "USE QLKS REVOKE UPDATE ON  "+ table +" TO "+role; 
                 st.executeUpdate(s);
            }
            JOptionPane.showMessageDialog(this, "Cấp quyền thành công!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Cấp quyền thất bại!"+ex.getMessage());
        }
       
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

        Connection ketnoi = SQLConnection.getConnection();
        String value = txtRole.getText().trim();
        String sql = "CREATE  ROLE  "+ value; 
        try {
            Statement stmt = ketnoi.createStatement();
            stmt.executeUpdate(sql);
            JOptionPane.showMessageDialog(this, "Thêm thành công!");
             LoadServerRole();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Role này đã tồn tại!");
            return;
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
       int row = RoleTable.getSelectedRow();
        if (row >= 0) {
            DeleteSelectedRole();
            this.LoadServerRole();
            JOptionPane.showMessageDialog(this, "Xóa thành công");
        } 
        else {
            String role = txtRole.getText().trim();
            int check;
            int kiemTraRole = 0;
            if (role.equals("")) {
                kiemTraRole = 1;
                JOptionPane.showMessageDialog(this, "Hãy nhập hoặc chọn Role muốn xóa");
            } else if (isExist(role) == 0) {
                JOptionPane.showMessageDialog(this, "Role không tồn tại");
            } else {
                check = isExist(role);
                if (check == 1) {
                    int ret = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?");
                    if (ret == JOptionPane.CANCEL_OPTION) {
                        return;
                    } else if (ret == JOptionPane.OK_OPTION) {
                        DeleteRole(role);
                        JOptionPane.showMessageDialog(this, "Xóa thành công");
                        this.LoadServerRole();
                    }
                }
            }
        }
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void RoleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RoleTableMouseClicked
        int row = RoleTable.getSelectedRow();
        String value = RoleTable.getModel().getValueAt(row, 0).toString();
        txtRole.setText(value);
        block(true);
    }//GEN-LAST:event_RoleTableMouseClicked

    private void RoleTableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RoleTableFocusLost
//       block(false);
    }//GEN-LAST:event_RoleTableFocusLost

    private void txtRoleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRoleFocusGained
       block(false);
    }//GEN-LAST:event_txtRoleFocusGained

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
                new Backup().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel9MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Role.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Role.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Role.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Role.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Role().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LogoutBtn;
    private javax.swing.JLabel Role;
    private javax.swing.JTable RoleTable;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbTable;
    private javax.swing.JCheckBox gAlter;
    private javax.swing.JCheckBox gDelete;
    private javax.swing.JCheckBox gInsert1;
    private javax.swing.JCheckBox gUpdate1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox owner;
    private javax.swing.JCheckBox rAlter;
    private javax.swing.JCheckBox rDelete;
    private javax.swing.JCheckBox rInsert;
    private javax.swing.JCheckBox rUpdate;
    private javax.swing.JTextField txtRole;
    // End of variables declaration//GEN-END:variables
}
